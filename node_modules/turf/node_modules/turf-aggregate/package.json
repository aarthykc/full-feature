{
  "name": "turf-aggregate",
  "version": "1.0.2",
  "description": "turf aggregate module",
  "main": "index.js",
  "scripts": {
    "test": "tape test.js",
    "doc": "dox -r < index.js | doxme --readme > README.md"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Turfjs/turf-aggregate.git"
  },
  "keywords": [
    "turf",
    "aggregate",
    "points",
    "geojson",
    "polygons",
    "stats"
  ],
  "author": {
    "name": "morganherlocker"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Turfjs/turf-aggregate/issues"
  },
  "homepage": "https://github.com/Turfjs/turf-aggregate",
  "devDependencies": {
    "benchmark": "^1.0.0",
    "tape": "^3.5.0",
    "turf-featurecollection": "^1.0.0",
    "turf-point": "^2.0.0",
    "turf-polygon": "^1.0.2",
    "dox": "^0.6.1",
    "doxme": "^1.4.3"
  },
  "dependencies": {
    "turf-average": "^1.1.0",
    "turf-count": "^1.0.1",
    "turf-deviation": "^1.0.0",
    "turf-max": "^1.0.0",
    "turf-median": "^1.0.1",
    "turf-min": "^1.0.0",
    "turf-sum": "^1.0.0",
    "turf-variance": "^1.0.0"
  },
  "readme": "# turf-aggregate\n\n[![build status](https://secure.travis-ci.org/Turfjs/turf-aggregate.png)](http://travis-ci.org/Turfjs/turf-aggregate)\n\nturf aggregate module\n\n\n### `turf.aggregate(polygons, points, aggregations)`\n\nCalculates a series of aggregations for a set of Point features within a set of Polygon features. Sum, average, count, min, max, and deviation are supported.\n\n\n### Parameters\n\n| parameter      | type              | description                             |\n| -------------- | ----------------- | --------------------------------------- |\n| `polygons`     | FeatureCollection | a FeatureCollection of Polygon features |\n| `points`       | FeatureCollection | a FeatureCollection of Point features   |\n| `aggregations` | Array             | an array of aggregation objects         |\n\n\n### Example\n\n```js\nvar polygons = turf.featurecollection([\n  turf.polygon([[\n    [1.669921, 48.632908],\n    [1.669921, 49.382372],\n    [3.636474, 49.382372],\n    [3.636474, 48.632908],\n    [1.669921, 48.632908]]\n  ]),\n  turf.polygon([[\n    [2.230224, 47.85003],\n    [2.230224, 48.611121],\n    [4.361572, 48.611121],\n    [4.361572, 47.85003],\n    [2.230224, 47.85003]]\n  ])\n]);\nvar points = turf.featurecollection([\n  turf.point([2.054443,49.138596], {population: 200}),\n  turf.point([3.065185,48.850258], {population: 600}),\n  turf.point([2.329101,48.79239], {population: 100}),\n  turf.point([2.614746,48.334343], {population: 200}),\n  turf.point([3.416748,48.056053], {population: 300})]);\nvar aggregations = [\n  {\n    aggregation: 'sum',\n    inField: 'population',\n    outField: 'pop_sum'\n  },\n  {\n    aggregation: 'average',\n    inField: 'population',\n    outField: 'pop_avg'\n  },\n  {\n    aggregation: 'median',\n    inField: 'population',\n    outField: 'pop_median'\n  },\n  {\n    aggregation: 'min',\n    inField: 'population',\n    outField: 'pop_min'\n  },\n  {\n    aggregation: 'max',\n    inField: 'population',\n    outField: 'pop_max'\n  },\n  {\n    aggregation: 'deviation',\n    inField: 'population',\n    outField: 'pop_deviation'\n  },\n  {\n    aggregation: 'variance',\n    inField: 'population',\n    outField: 'pop_variance'\n  },\n  {\n    aggregation: 'count',\n    inField: '',\n    outField: 'point_count'\n  }\n];\n\nvar aggregated = turf.aggregate(\n  polygons, points, aggregations);\n\nvar result = turf.featurecollection(\n  points.features.concat(aggregated.features));\n\n//=result\n```\n\n## Installation\n\nRequires [nodejs](http://nodejs.org/).\n\n```sh\n$ npm install turf-aggregate\n```\n\n## Tests\n\n```sh\n$ npm test\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "turf-aggregate@1.0.2",
  "_shasum": "4b7e030ef174bbc824038f55342f52ea0dfa9c27",
  "_from": "https://registry.npmjs.org/turf-aggregate/-/turf-aggregate-1.0.2.tgz",
  "_resolved": "https://registry.npmjs.org/turf-aggregate/-/turf-aggregate-1.0.2.tgz"
}
