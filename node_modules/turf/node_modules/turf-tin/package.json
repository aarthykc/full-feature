{
  "name": "turf-tin",
  "version": "1.0.6",
  "description": "turf tin module",
  "main": "index.js",
  "scripts": {
    "test": "tape test.js",
    "doc": "dox -r < index.js | doxme --readme > README.md"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Turfjs/turf-tin.git"
  },
  "keywords": [
    "turf",
    "tin",
    "triangulate"
  ],
  "author": {
    "name": "morganherlocker"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Turfjs/turf-tin/issues"
  },
  "homepage": "https://github.com/Turfjs/turf-tin",
  "devDependencies": {
    "benchmark": "^1.0.0",
    "tape": "^3.5.0",
    "dox": "^0.6.1",
    "doxme": "^1.4.3"
  },
  "dependencies": {
    "turf-featurecollection": "^1.0.0",
    "turf-polygon": "^1.0.2"
  },
  "readme": "# turf-tin\n\n[![build status](https://secure.travis-ci.org/Turfjs/turf-tin.png)](http://travis-ci.org/Turfjs/turf-tin)\n\nturf tin module\n\n\n### `turf.tin(points, propertyName)`\n\nTakes a set of points and the name of a z-value property and\ncreates a [Triangulated Irregular Network](http://en.wikipedia.org/wiki/Triangulated_irregular_network),\nor a TIN for short, returned as a collection of Polygons. These are often used\nfor developing elevation contour maps or stepped heat visualizations.\n\nThis triangulates the points, as well as adds properties called `a`, `b`,\nand `c` representing the value of the given `propertyName` at each of\nthe points that represent the corners of the triangle.\n\n\n### Parameters\n\n| parameter      | type              | description                                                                                                                                                      |\n| -------------- | ----------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `points`       | FeatureCollection | - a GeoJSON FeatureCollection containing Features with Point geometries                                                                                          |\n| `propertyName` | string            | _optional:_ - name of the property from which to pull z values. This is optional: if not given, then there will be no extra data added to the derived triangles. |\n\n\n### Example\n\n```js\n// generate some random point data\nvar points = turf.random('points', 30, {\n  bbox: [50, 30, 70, 50]\n});\n//=points\n// add a random property to each point between 0 and 9\nfor (var i = 0; i < points.features.length; i++) {\n  points.features[i].properties.z = ~~(Math.random() * 9);\n}\nvar tin = turf.tin(points, 'z')\nfor (var i = 0; i < tin.features.length; i++) {\n  var properties  = tin.features[i].properties;\n  // roughly turn the properties of each\n  // triangle into a fill color\n  // so we can visualize the result\n  properties.fill = '#' + properties.a +\n    properties.b + properties.c;\n}\n//=tin\n```\n\n## Installation\n\nRequires [nodejs](http://nodejs.org/).\n\n```sh\n$ npm install turf-tin\n```\n\n## Tests\n\n```sh\n$ npm test\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "turf-tin@1.0.6",
  "_shasum": "6331f17754f4cfb4bf83189ee8a7bf70b7b52827",
  "_from": "https://registry.npmjs.org/turf-tin/-/turf-tin-1.0.6.tgz",
  "_resolved": "https://registry.npmjs.org/turf-tin/-/turf-tin-1.0.6.tgz"
}
